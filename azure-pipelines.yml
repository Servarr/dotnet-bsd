parameters:
- name: runtimeBranch
  displayName: Tag for runtime repository
  type: string
  default: v6.0.0-preview.3
- name: aspBranch
  displayName: Tag for aspnetcore repository
  type: string
  default: v6.0.0-preview.3
- name: sdkBranch
  displayName: Tag for installer repository
  type: string
  default: v6.0.100-preview.3

variables:
  runCounter: $[counter('runNumber', 1)]

resources:
  repositories:
  - repository: runtime
    type: github
    endpoint: Servarr
    name: dotnet/runtime
    ref: release/5.0
  - repository: aspnetcore
    type: github
    endpoint: Servarr
    name: dotnet/aspnetcore
    ref: release/5.0
  - repository: installer
    type: github
    endpoint: Servarr
    name: dotnet/installer
    ref: release/5.0.1xx

trigger:
  branches:
    include:
    - master

pr:
- master

stages:
  - stage: Runtime

    pool:
      vmImage: 'ubuntu-20.04'

    jobs:
      - job: Setup
        steps:
        - bash: |
            BRANCH=${{ parameters.runtimeBranch }}
            echo "##vso[build.updatebuildnumber]${BRANCH/\//-}-${RUNCOUNTER}"
          displayName: Set Build Name

      - job: Runtime
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: runtime
          - bash: |
              set -e
              git -C runtime tag | grep ${{ parameters.runtimeBranch }} | xargs git -C runtime checkout
              git -C runtime revert -n 6055dfa7ecb7628fdb2570d8897e83520f69f280
              sed -i '/\/dnceng\/internal\//d' runtime/NuGet.config
            displayName: Checkout and patch
          - bash: |
              source dotnet-bsd/common.sh
              get_runtime_docker
              echo $DOTNET_DOCKER_TAG
              calculate_build_id $(git -C runtime tag --points-at HEAD)
              echo $OFFICIALBUILDID
              docker run -e ROOTFS_DIR=/crossrootfs/x64 -v ${BUILD_SOURCESDIRECTORY}/runtime:/runtime $DOTNET_DOCKER_TAG /runtime/eng/build.sh -ci -c Release -cross -os freebsd /p:IsEligibleForNgenOptimization=false /p:OfficialBuildId=$OFFICIALBUILDID
            displayName: Build Runtime
          - publish: '$(Build.SourcesDirectory)/runtime/artifacts/packages/Release/Shipping'
            artifact: RuntimePackages
            displayName: Publish Runtime
          # - publish: '$(Build.SourcesDirectory)/runtime/artifacts/logs'
          #   artifact: RuntimeLogs
          #   displayName: Publish Build Logs


  - stage: AspNetCore
    dependsOn: Runtime
    pool:
      vmImage: 'ubuntu-20.04'
    jobs:
      - job: AspNetCore
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: aspnetcore
            submodules: true
          - bash: |
              set -e
              git -C aspnetcore tag | grep ${{ parameters.aspBranch }} | xargs git -C aspnetcore checkout
              sed -i '/linux-x64;/a \ \ \ \ \ \ freebsd-x64;' aspnetcore/Directory.Build.props
              sed -i '/<LatestPackageReference Include="Microsoft.NETCore.App.Runtime.linux-x64" \/>/a \ \ \ \ <LatestPackageReference Include="Microsoft.NETCore.App.Runtime.freebsd-x64" \/>' aspnetcore/eng/Dependencies.props
              dotnet nuget add source ../runtime/artifacts/packages/Release/Shipping --name local --configfile aspnetcore/NuGet.config
              sed -i '/\/dnceng\/internal\//d' aspnetcore/NuGet.config
            displayName: Checkout and patch
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: RuntimePackages
              targetPath: '$(Build.SourcesDirectory)/runtime/artifacts/packages/Release/Shipping'
              patterns: |
                dotnet-runtime-*-freebsd-x64.tar.gz
                Microsoft.*.freebsd-x64.*.nupkg
          - bash: |
              source dotnet-bsd/common.sh
              calculate_build_id $(git -C aspnetcore tag --points-at HEAD)
              echo $OFFICIALBUILDID
              ls -lR runtime
              mkdir -p aspnetcore/artifacts/obj/Microsoft.AspNetCore.App.Runtime
              cp runtime/artifacts/packages/Release/Shipping/dotnet-runtime-*-freebsd-x64.tar.gz aspnetcore/artifacts/obj/Microsoft.AspNetCore.App.Runtime
              aspnetcore/eng/build.sh -c Release -ci --os-name freebsd -pack -nobl /p:CrossgenOutput=false /p:OfficialBuildId=$OFFICIALBUILDID
            displayName: Build AspNetCore
          - publish: '$(Build.SourcesDirectory)/aspnetcore/artifacts/packages/Release/Shipping'
            artifact: AspNetCorePackages
            displayName: Publish AspNetCore Packages
          - publish: '$(Build.SourcesDirectory)/aspnetcore/artifacts/installers/Release'
            artifact: AspNetCoreInstallers
            displayName: Publish AspNetCore Installers

  - stage: Installer
    dependsOn: AspNetCore
    pool:
      vmImage: 'ubuntu-20.04'
    jobs:
      - job: Installer
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: installer
          - bash: |
              set -e
              git -C installer tag | grep ${{ parameters.sdkBranch }} | xargs git -C installer checkout
              git -C installer apply ../dotnet-bsd/patches/installer/0001-freebsd-support.patch
              sed -i 's/@(NetCore31RuntimePackRids);/@(NetCore31RuntimePackRids);freebsd-x64;/' installer/src/redist/targets/GenerateBundledVersions.targets
              sed -i 's/@(AspNetCore31RuntimePackRids);/@(AspNetCore31RuntimePackRids);freebsd-x64;/' installer/src/redist/targets/GenerateBundledVersions.targets
              dotnet nuget remove source msbuild --configfile installer/NuGet.config || true
              dotnet nuget remove source nuget-build --configfile installer/NuGet.config || true
              dotnet nuget add source ../runtime/artifacts/packages/Release/Shipping --name runtime --configfile installer/NuGet.config
              dotnet nuget add source ../aspnetcore/artifacts/packages/Release/Shipping --name aspnetcore --configfile installer/NuGet.config
              sed -i '/\/dnceng\/internal\//d' installer/NuGet.config
            displayName: Checkout and patch
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: RuntimePackages
              targetPath: '$(Build.SourcesDirectory)/runtime/artifacts/packages/Release/Shipping'
              patterns: |
                dotnet-runtime-*-freebsd-x64.tar.gz
                Microsoft.*.freebsd-x64.*.nupkg
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: AspNetCorePackages
              targetPath: '$(Build.SourcesDirectory)/aspnetcore/artifacts/packages/Release/Shipping'
              patterns: |
                Microsoft.*.freebsd-x64.*.nupkg
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: AspNetCoreInstallers
              targetPath: '$(Build.SourcesDirectory)/aspnetcore/artifacts/installers/Release'
              patterns: 'aspnetcore-runtime-*'
          - bash: |
              source dotnet-bsd/common.sh
              calculate_build_id $(git -C installer tag --points-at HEAD)
              echo $OFFICIALBUILDID
              ls -lR runtime
              ls -lR aspnetcore
              mkdir -p installer/artifacts/obj/redist/Release/downloads/
              cp runtime/artifacts/packages/Release/Shipping/dotnet-runtime-*-freebsd-x64.tar.gz installer/artifacts/obj/redist/Release/downloads/
              cp aspnetcore/artifacts/installers/Release/aspnetcore-runtime-* installer/artifacts/obj/redist/Release/downloads/
              installer/build.sh -c Release -ci  -pack -nobl --runtime-id freebsd-x64 /p:OSName=freebsd /p:CrossgenOutput=false /p:DISABLE_CROSSGEN=True /p:IncludeAspNetCoreRuntime=True /p:OfficialBuildId=$OFFICIALBUILDID
            displayName: Build Installer
          - publish: '$(Build.SourcesDirectory)/installer/artifacts/packages/Release/Shipping'
            artifact: Installer
            displayName: Publish Installer
